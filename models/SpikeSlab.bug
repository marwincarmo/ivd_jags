model {
  ## Likelihood components:
  for(i in 1:N) {
    Y[i] ~ dnorm(mu[i], prec_i[i])
    prec_i[i] <- 1 / pow(tau_i[i], 2)

    # Note: Using inprod is cleaner in JAGS
    mu[i] <- inprod(beta[], X[i,]) + u_final[groupid[i], 1]
    log(tau_i[i]) <- inprod(zeta[], X_scale[i,]) + t_final[groupid[i], 1]
  }

  ## Priors & Random Effects Model
  for(j in 1:J) {
    # Standard normal deviates
    for(p in 1:P){
      z[j,p] ~ dnorm(0,1)
    }

    ### DYNAMICALLY GENERATED CODE WILL GO HERE ###

    # Spike-and-slab selection for the SCALE random effect (t0j)
    # Assumes v[j,1] is u0j and v[j,2] is t0j
    ss_t0[j] ~ dbern(0.5)

    u_final[j, 1] <- v[j, 1] # Location effect is always on
    t_final[j, 1] <- v[j, 2] * ss_t0[j] # Scale effect is selected
  }

  ## Priors for fixed effects
  for (k in 1:K) {
    beta[k] ~ dnorm(0, 1.0E-6)
  }
  for (s in 1:S) {
    zeta[s] ~ dnorm(0, 1/3^2)
  }

  ## Priors for random effect standard deviations (Half-Cauchy)
  for(p in 1:P) {
    tau[p] ~ dt(0, 1, 1) T(0,) # half-t with df=1 is half-cauchy
  }
}
